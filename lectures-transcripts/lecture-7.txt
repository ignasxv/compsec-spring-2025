UNKNOWN
For. The show that. I share. Thanks for your. Time. It doesn't matter. Thank. You. Good morning. Professor Crump teaches this semester. Uh, it's an advanced, I think, software engineering course. I think, I think, but I think it's not called Kotlin. I think it might be maybe advanced software engineering. I'm not sure. Or advanced programing language, something like that. I don't know if that's offered every semester though. That's my last one. This is your last semester. Okay. Yeah, I think that might be a new course. So. All right. So you will want to have your VM up and running today. Pretty much every day. But. Thank you. All right. So my kids got school canceled today. My son last night said, I think we'll have a school day or snow day tomorrow. I go. No, I don't think so. It's going to be rain. Woke up this morning. Got the text from the school. He, uh. He wakes up at the same time as I do, and I tell him I go, no school. He goes, I told you, I told you. Wow, man. Such conviction. I let the dog out this morning. I almost fell on my butt because there's a sheet of ice out there over by us. It was pretty bad. Yeah. You kid from the west side too, right? Yeah, it was like a it was a sheet of ice. The dog. The dog took the opportunity to run out and did that. What's that? Uh, she did okay myself though. I almost fell on my butt. I was not happy. But anywho. Over here. So. All right, so let's continue our talk about network security. But before we do that, let's do an exercise. So if you want to do this in groups you can why don't you find out what's the IP address of Caslib Edu. Find out what ports are open on CAS lab Edu. Um you can use nmap and then find out what version of the software are running on there. I then want you to take a look at do a quick search. Take a look at what you told you or I'm sorry. Um the xg utils vulnerability. And just do a quick search on it. You'll see an article from Ars Technica near the top. Um, I want you to just read really quickly about the vulnerability and then run the following command, which is taking a look at the version that you have for XC Utils. And if your VM is vulnerable. All right. Quite a few things to do. Let's see where we're at. I think we'll do it in seven minutes. I don't think you need ten. I think five might be too quick. But talk through it with one another. And see where we're at. So you're practicing some of the things you learned last time. And now you have addresses. That. Make these things an exam that's coming up soon. You want to get some practice with them. Although be careful. And I don't want you to end up on some random server. What's that? Okay, everybody. That is. For you talking about the antique pattern. Oh, I see that. Lowercase s. You could do a dash of the dash. Yeah. That's. Right. Yeah, you might be. Right. That's good. Um. Um, if you're running in your VM and it says you cannot resolve the clusters or getting back. Or maybe you're going to grade one, you might want to reboot your VM. So what sometimes happens is if your host is switching networks. You might not be able to reestablish that connection. You might want to do what you started to do pseudo zeros or just put that on pause on the internet. So give it a couple more minutes. What was the question? Wait, what's the reason for. This. Yeah. So this should be okay. Uh, capital B? Yes. Yes. Thank you. Now we'll go. Did you just break out? Yeah. Yeah, we'll go for it. All right, let's start. Let's start working our way through it. So what is the. What's the command you get? Uh, I'm not worried about the answer right now. What's the command to get the IP address to the castle? What can we use? What program? Yeah. Oh, wow. Uh, you can use that. You're going above and beyond. You don't need to go all the way to the city. I need to be traced. What's the other program you can use for command post? Right. Use host. You can use. Okay. Right. You stick figure out what the outcome is. And if you, uh, use any of the other commands, you can use ping and so on. I don't think we've gotten a ping yet. Um, what about the ports? What ports are open at the next level? What's that? How would you like that? Yeah. Use that map. Yep. And then we'll, uh, use that map to figure out what ports are on there and then what ports are open. What do you find? That's just that's to say it says port 22. 80. And the others. Local 4.3. Good. Good, good. Okay. Is closed for some reason. What's that? One? One, two. Three items. I'm not sure what that is. I'm about to go look at that. Uh, what was the software? May be running. I say May because I'm not making an educated guess. So what software is listing up for? Apache search in the work on Apache? That's right. Yeah, yeah. Um, what about, um, same on 44321443. We're about 22. Or 22. It's all been necessary. Good, good, good. Um, what flag did you use to find out the version of that? I see this in the future. I heard somebody say it. I see, yeah. Yeah. See, that's that's capital D. Okay. Um, so. And that by itself would just find open ports as fi is going to do some probing to figure out what version of software. Can you tell me what they found with the utility vulnerability? Yeah, I can do that. So let me check the code through a testing pipeline. What was, uh. What kind of software does that affect? Uh, like compression. Compression. Which is, if you think about compression, libraries use quite a bit of places. Right? Um, what, uh, what common service does it affect? You might do a quick search if you just do a quick search. In the article you have this open, you might find what is the size. You. See there. Yeah. So if you take a look at XC utils vulnerability and you're going to listen to a podcast later in the semester that relates to this. Um, can you open up Firefox. So we do X. Well, there's that vulnerability. Oh, look at that back door. That's never a good sign when that comes up. But if you take a look at utils, uh, if you do a quick search, I think open there's. Open open open. Open source. Open. SSH. Open. SSH. Um, so what are we running on? CAS. Lab. Open. SSH. What are you running on your VM? Open. SSH. Yeah. So, um, I think when we took a look at what version is vulnerable, I don't recall the actual number I think it has on there. Um, but if you take a look at your VM and you ran the command. Yours might be vulnerable. It might not be. I just want to take a look at what version is running. All right, so this says 5.6.1. And what version is vulnerable on here? I think they had it on here. That's the version 5.6 and 561. Oh that might be the vulnerable version isn't it. There's other versions that might be it. I'm not sure. Yeah, we'd have to do some digging. Um, I know, yeah. So this is a vulnerability, uh, discovered in 2024. Uh, I remember what the version was. 0561. Backdoor extraction. So this might. I'd have to do some digging, but this might still be vulnerable. Although I think I think 561 is actually patched. Okay. I don't know what that means. That's a good question. That might be something with the name of the bill. So all right, so let me just take a quick look at map. So or run through some of the exercises so we can figure out what the IP address is using. Host. Right. k.edu ks.edu. Right. We can figure out what the IP address is like using that right. We can do an nmap on cast lab.edu. And now we'll just do a quick look for what ports are open. That's a fairly uh should be a fairly quick. I don't know why it's taking so long. Um, doing a port scan by itself should be fairly quick. I don't know if they're trying to slow something down here. Um, but when we want to find out the version of the software, then we have to do a little bit more probing and that could take a little bit longer. So when we pass the S and the V um that does take a little bit more time. All right. I don't know why that's taking so long, but um, but hopefully you ran through it. And when you do the dash s v, um, you'll actually figure out the version of the software. So I'll leave that up and running and I'll come back to it. Uh, but hopefully just kind of run it through those. Kind of jog your memory a little bit about, um, how we could find what version of software are running, what ports are open. And that's kind of the first step. If we wanted to attack a system is to find out, um, why is it host is, uh, service detection perform. That's clear. Connection refused. Now, something might be blocking it. Maybe because we're all hitting it at once. Um. All right. But, uh, again, if you wanted to attack a network or device on a network, figuring out the IP address. Doing some probing with map, uh, figuring out the version of software runs and then taking a look at any open vulnerabilities is a way to attack it. Yeah. Um, most of these commands on campus kind of like the I can't. Yeah, I think it might be in the slides now. Um, I think. Right. Yeah, I think they are. Um, and then you can always take a look at the echo 360 recording two. Um, all right, so just to recap from what we talked about last time. So we took a look at the OSI model. Uh, I'm not going to ask you to remember the OSI model, but you should be familiar with the layers that, that we took a look at. Uh, we took a look at how we, um, we talked about how a network will break, uh, a longer message into individual packets. We'll actually take a look at some of those packets today. We talked about the internet network layer, how the need for IP addressing, how we could do, uh, reliable communication using TCP and unreliable communication using UDP. And then we also took a look at how you can actually attack these protocols okay. Using IP spoofing which is a common technique. Um, so I think we took a look at DNS. Uh, we did a host, we did a dig. Um, and if you put the IP for google.com in your browser or for like Gmail or anything like that, uh, you would have came to the Google service. So the thing that we did not talk about, though, is fundamentally how DNS works in the hierarchy of servers. But, um, any domain should have a DNS server or what's called a name server. So case has its own DNS server in house, okay. Or it has its own DNS service. The idea behind it is that if you were to look up, uh, some subdomain with case edu. So for example, like Cisco edu or a canvas that edu from the outside, we need an authority to say what is the IP address. Okay. For one of those right now you can have your own DNS server actually in-house as well. You can you can easily do that. But the idea behind this is that when we think about like a top level domain such as like.com or.org, um, those will give answers for uh, something like yahoo.com or amazon.com or pbs.org or you know, poly edu edu. Right. Then from there, if you have like sis.ums.edu, you then go to UMass edu to get that answer. The idea is you kind of work your way down to figure out what the answer is to each one of those questions. And it's an iterative approach. So if you can't get the answer, um, or you keep asking the next essentially server until you get the answer. Now, as you can imagine, anytime that we do a lookup, it takes resources, right? So if I'm doing a lookup for like case edu, that takes up resources to send that query and then to get an answer. And so oftentimes what you will do is you will have a cache response okay. So you'll have a DNS cache on your operating system so that every time you look up something like CSS edu, it's not going to actually do a lookup. It's not going to send a request. It's going to keep a cache copy of that response. Just like your web browser has a cache. Same idea. Okay. So DNS itself is also vulnerable because if you think about DNS and thinking about that lookup, if you can control what IP address is returned from DNS, and if I have somebody go into like chase.com to do their banking if I can, uh, provide a spoofed IP address as a response to the DNS request. Well, then I can control where that browser goes. Right. So if I can modify the IP address that's returned, I can say, well, instead of going to the actual, um, Chase Bank, you know, server, I can have you go to my own server that looks like Chase Bank. And it's really easy to make a web page that looks like, you know, looks like Chase or, you know, KeyBank or whatever, or, you know, PNC or whatever it may be. It's very easy to, uh, to do that. And we'll actually demonstrate it later in the semester. So, um, so one way of preventing this or, uh, making this a little bit more secure is to use something called DNS. Okay. The idea behind DNS is to actually do a signature on those DNS records so that, you know, it's from an authoritative source. Okay. Otherwise, you know, if you get back that response, you may not be sure who it's actually from. Um, but, uh, there has been, you know, in order to use this, you do need to have widespread adoption. It's kind of like the IP version six problem. If you don't have a mass adoption of IP version six, not everybody's going to use it. Same thing with DNS. It also has received some criticism which we're not going to dive into. But I did include an article here from ICAN org, which you can read about some of that criticism. Okay. So there are some ways of protecting DNS. They just haven't been widely adopted yet. Um, and like I said, uh, one way that you can attack DNS is by supplying a fake record. And if you can get a fake record, return to a client where they know maybe access a or an IP address that they shouldn't. You can attack a client that way. The other way you can attack a client is just like how we've taken a look at it with UDP and TCP. You can essentially spoof an IP address and then do a denial of service using DNS. Okay. So you can ask for pretty much any result from a DNS server and say that it came from this particular IP address. And then you can use the DNS servers, the name servers, to actually send those responses to a target victim. And what that's doing is it's flooding the network on that target victim and attacking them. Okay. So just like with TCP, UDP you can use DNS to attack somebody. Okay. All right. So one more thing about the network though. There are some different ways that we can troubleshoot a network. So one thing that we did take a look at we did take a look at. Using TCP traceroute. So you should already know how to do that. So if I want to find out what the what the route is to, you know like google.com, I can do that using a TCP traceroute. There is a traditional a traditional trace route traceroute, although it's not going to be installed in here by default. But sometimes if you want to see if a host is up or not, you may have heard of this command called ping. In fact, if you maybe call your ISP and saying, hey, the internet's down, they might, you know, maybe walk you through doing this, they'll ask you to reboot this and whatnot. Um, but if you just want to see if a host is up and running, you could do a ping command. And what that will do is it will measure the response time. And if that host is up, um, now ping works on a protocol called ICMP, which is a way of kind of diagnosing a network. So you'll see that sequence here from ICMP within that ping response. Uh, ICMP sometimes is blocked by a firewall because people don't want you to be pinging hosts within their network. And so sometimes ping doesn't. It isn't always a definitive way of figuring out, I've figured out if a host is up. Okay. Some people do block that traffic, so, um, I don't even know if it will work on Cass lab. It may internally, but I'm not sure if it works internally. Oh, it does work internally. Okay. And as you can imagine, that response from a server inside is a little bit faster than going outside to Google. Right. So all right, so ping can be used just to kind of see if there's an issue with the network. You can use a hostname. You can use an IP address. It's all the same. You can also find out the IP address that way as well. Um another way that you can see if a particular host is up is using netcat. Netcat allows you to connect to an actual host, and I'll have you do a quick exercise with that here in a little bit. Uh, but sometimes if you're thinking about how you want to attack a network, you also might want to find out who actually owns that particular domain. Okay. So if you open up a browser And you go out to, uh, who is.com? You could find out who owns a particular network. And so if I were to go to case.edu or you could type in CW, CW crew edu, I enter that at the top here at who is. Com and you can get uh, you actually have to have this, um, if you have a domain on the network. One of the biggest mistakes I made was to make a website for my brother for his business, because my name was on there, and I get emails all the time from people wanting to redesign the web page. Um, but anyway, so, uh, you do have an administrative contact. Uh, here, you have a phone number, a technical contact and whatnot. Uh, you can find out what the name servers are for the network when that last record was updated. Um, so you can get some information off of this. And this is often used also for phishing campaigns or spear phishing. So if you wanted to attack somebody that you know, might have might have administrative access on the network. Um, I have a name here. I might be able to figure out their email. I might even be able to use that phone number to have an AI. Um, please call them and ask them to reset the password or something like that. Um, so this could be, you know, often used for malicious purposes. So, uh, but anyways, who is can also get you that just that information of who actually owns a domain. Um, and that's can be really important. So um, so I did include an exercise if you want to run that on your own. But, you know, we just kind of did that just now. But another way that you can, uh, take a look at some of the DNS records to is actually be explicit and then do a dig at, uh, a particular DNS server. Um, and you can use one of those nameservers at case. So let's just go through that really quick just so you can get some practice with that. But what I'm going to do is I'm going to take one of these name servers that Casey's owns here or that uses uh, and, or is Ohio. Oh, God. What is it? It's it's a they use it for like, creating a network for like, higher ed or net. I don't remember the acronym. Yeah, I don't remember the acronym, but it's like essentially setting up, um, the network for case. So like their connection to the internet. But I'm going to take that S2, which uh, stands for Name Server two, and I'm going to do a dig on that. So host or just do host and then do case that edu that would just return back an IP address and host this case Edu we'll just return back an IP address. This uses my default DNS server though. Okay, so this will use the default DNS server for my machine. If I wanted to actually query a particular server, I could use a dig. And I'm going to do a dig. I'm going to do an add and I'm going to do that NSS 2.. edu. So I'm not using my default server. Now I'm actually saying hey, let's use NSS two that edu and I'm going to look for cisco.edu okay. So I'm going to query that server directly. And I might get a different response that matches up that says 1298.85.23. If I scroll down I get the same answer. Okay, so no surprise. But now what I'm going to do is I'm going to query that. Let's see if we get a different response from 6.0. We might not, but let's see. Oh no, we did get the same response. Okay. Um, but anyways, this is a way that you could query, um, a DNS server directly. And if you're doing any kind of troubleshooting on a network, uh, sometimes what you want to do is you want to see what IP address the particular user's DNS server is returning. And, uh, they can give you their DNS server, and then you can just query that directly. Um, if you wanted to see, uh, other records from that too, you could do that by passing in any flag, uh, to the command. But, uh, as I mentioned before, the Dig command allows you to get a little bit more information about DNS. So. All right, so there is a really good command though. If you want to figure out if something is up and running. Um, but if you go ahead and, uh, I want you to try this out. Um, you're going to use the netcat command, which allows you to make a connection directly to a port. Um, there's other ways you can use the netcat command, too. But I want you to type in nick space. Space, and then hit enter. Then what you're going to type in is that git command. Up top there the host. And then you enter enter a really quick okay. And let me know what you see. Okay. So. Yeah. That's. Yes. Yes. Yes. Yes. All right. So what do you get when you run that? Anybody? That's a bad request, right? So you. But what's the type of response that you get back? That's an HTTP response. You're talking directly to the actual web server. Uh, so. And you can, uh, if you're running a Linux based or Unix based machine, you can actually run this locally, too. Um, but you should also. Actually, I'm surprised you got a bad request. You should get anybody get, like, a 302. Or 301. Yeah. So, um, you can't do this on port 443 because, uh, you can't send something in the clear to it and expect a response. Uh, but here I'm actually connecting directly to the web server. So this is the web server or, um. Okay. Edu. There we go. You get back a 301. So, um, so this is when you actually send a request from your web browser to your, to a web server. This all is essentially doing this, bringing a TCP connection directly to the web server. And when you make a request for that particular website, When you have a forward slash at the end of your your your your URL. That's what you see here. Okay. And then the host that you actually type in. That's what you see here as well. Now case wisely is not going to let us talk in the clear. Over. Port 80 is telling us hey we move permanently. So you should remember this to go to https colon slash slash. Now let me ask you this. Why does this matter if we're if I'm not logging into case, does it really. Should I really care this over at Https. What's the point of it? Yeah. Yeah. Say a little bit louder. This one is taking a page on YouTube. So yeah, if I, if I'm just talking over http right, I can would intercept that request. If I scroll to the right. And once that comes over, I can feed back a different page. Right. Only if we access it already. Yeah. So I know for certain that is the case, right? Some of you actually have to take over the server, so it is a little different. So anyways that's one way that you can actually use and see to kind of do some troubleshooting. You can actually talk directly to the port where ping will allow you to actually just be able to test the network connection. Now NC is also a way that you can also script some attacks as well, right? So if you were attacking a server, you want to send it a bunch of different requests. NC is also another way that you can do that as well. Um, you can also let me show this really quick. Uh, you can also use NC to listen on a port. Um, so if I do a dash L and an 8080, I won't ask you about this on an exam. Anything like that. Now I'm listening on port 8080. Okay. And if I wanted to, uh, let me just create a brand new window. I should be able to create one like that. Yeah. There we go. I'm going to create a brand new window just so you can kind of see it. But if I were setting up, um, some sort of bot where I want to see any kind of traffic that would reply back to me, um, I can have it to where it makes a socket connection back to my server just by having this NK command. So if I were to have like, let's say, if I were to do like some phishing or something like that and I'm waiting for, uh, I got like a WebSocket installed on the page, I'm waiting to see, like any kind of, you know, responses as people type. Um, I can have it communicate back. So if I were to just do an NC, localhost 8080, I could type in Hello World and then you see it right there. So that's listening on my server. Okay. That's an open connection. Um, and then only when that connection is closed would that, um, port potentially close. So, so NC can be used for troubleshooting. Um, it can be used also to attack um networks as well or server software on the server. All right. So one thing we haven't talked about yet is some of the hardware that makes up a network. Um, if you're more interested in this, I highly encourage you to take the computer networks course. Um, but, um, some people often mix routers and switches together. We talked a little bit about routers and their main job being to find the most optimal route from one, uh, one end to another. Okay. And we talked about some ways that, that, um, some things that can interfere with that route. Literally animals chewing through wires. Or it could be could be congestion. Congestion on a network. Um, but, um, there's a bunch of different algorithms that, uh, that you can use to figure out what that best route is. OSPF, Dijkstra's algorithm, um, that you can read more about. Or you can take computer networks to learn more about that. Uh, but switches operate a little bit differently. Switches are figuring out how you connect to devices on an actual network. Okay. So this is going to operate using a mac address instead of an IP address. Uh, and then send traffic to, um, to the host within that network. So this is what we call the datalink layer where switch is run. And um, again, it uses something called a mac address. It's not actually using an IP address. Now, a Mac address is supposed to be unique to a network card, right? So what I mean by that is if you have, uh, a wireless adapter or if you have an even an adapter, there's supposed to be a unique Mac address, essentially a sacrifice that's used. The reality of it is that, you know, you can spoof an IP address, right? You can spoof IP address. You can also spoof a mac address as well. And it's also used as a way of intercepting traffic on a local level. Okay. So let's take a look at how we can actually how we can actually see that. But before we do that too, another way that Mac addresses can also be used to is to track people. Okay, so if you have an iPhone, I think this feature is available on Android. If you if you pull out your phone really quick and you take a look at your network connection to case, if you tap on Wi-Fi, I think you guys can make this case wireless. Is that right? Okay. If you tap on the I logo and you scroll down, you'll see private Wi-Fi address on there And that private Wi-Fi address. That is a map to rest on there. Right. And so what you can do is you can change that to where it's either using a rotating Mac address or you just turn it off. Okay. Now you might be wondering how can that be used to track. If you connect to, let's say, like a network that's targeted or you can connect to a network, a Home Depot or whatever it might be. Right. If that matter is supposed to be unique to your device, I can see that you're at Home Depot. I can see that you're at target. I can see that you've got your local coffee shop, whatever it may be. Right. So I can see all those different points in the map that I'm seeing that I can then make some inferences. Okay. You're you're shopping from me for your average for this time of the day. Your target, whatever it may be. Okay. So one of the ways you can kind of protect yourself is to either spoof such, you create a different IP of private IP address, or you can rotate it so you can use it if I want to deny or use it. You need one at each location, right? So that's kind of a way of protecting yourself. But, uh, a mac address is, um, is something you do need to talk on a local network. So if you go ahead and go on your VM. And you type in IP addr, remember we can use that to find out our IP address. And you have the loopback there. Ignore that. But you should have an E on there. We know that this is the IP address. But this here is our Mac address okay. One of the ways you can lock down your network at home is to require um, or is to only allow certain Mac addresses to be able to connect to the network. So even if they guess your, Your passcode to your network. You can lock it down by specifying that particular Mac address, but keep an eye on that. All right. So if you want to take note of that and then what I want you to do and this might not be as interesting here, but if you type in r a r p a that's address resolution protocol. What it will do is give you an address based on that Mac address. Okay. So this isn't as exciting. Um, but if you have let me see, except VMs not bridged the network. If you have your VM Bridgton network, it might be a little bit more interesting. Um, but if I go here. Yours froze. All right, so that's everything it sees on the network right now. Um, and it's, uh, Mac address. Uh, let me see if I do a ping google.com. Make it a little bit more. But if I have some more device to connect on a network, I can see a lot more addresses. So if you're wondering, hey, like what is the Mac address for this particular device on your home network, you can do an ARP A and you can find out what that address is. Okay. So that's one way of doing it. Um, but uh, anyways, that's how you can find out what that what that Mac address, um, Mac address is and there are ways of attacking that as well. Um, which we're going to talk about here in a minute. But before we do that, um, talking on our local network is a little bit different than talking on the internet. Talking on the internet. We send a packet that gets routed to a destination. Um, you've probably heard of Ethernet before. Uh, the idea behind, uh, Ethernet was originally there was a shared media that everybody connected to it. Okay, so now if you have a laptop or a server to a switch is through a hard connection and you have a wired connection goes before and this is before my day, you actually had to like tap into that shared video. And so the idea behind this is that you have maybe a coaxial cable that multiple devices would listen to, to see if there was any traffic that was being sent on there. If there was no traffic, they would try to submit a packet or some data on there. But occasionally what would happen is you would have two devices that would send something at the same time. And so we thought it was clear to go. They both sent a packet on the network and you had a collision. So you had a sense. Now, what's interesting now is that we well, we moved away from this. Right. We don't have to worry about a collision because we either have a hard connection to a switch. We don't have to worry about colliding with somebody else. But today, if we use a shared line, life. We do. What is it? What's the shared medium that we use today to communicate? It's not a physical table, but it's. What's that? Somebody said. Why? Why? Well, what's the medium? Sierra. Oh, right. It's the space around us. Right. So we still have to listen to a collision, right? A collision could occur. Um, so I bring this up because even though, um, Ethernet, you might take a look at, it's called CSM, CD or CSM, CA. So carrier sense, multiple access collision detection. And then there's collision avoidance. So um, so it's still used today even though we don't have um, or you know, we're not actually like tapping into like a shared medium. But with Ethernet though, there is a way to actually attack that as well. Um, you could send some fake data packets to a switch. You can flood the switch so the table fills. So the switch will keep track of. Saying this host has this IP address and this IP has this IP address. And then what ends up happening once that table fills is when a switch gets a packet. It wants to make sure that it delivers it. So it goes into a fail open mode, meaning that any packet that you want to pass to anybody. And so if you can think about this on a network, if somebody is sending some data that should be going to that might be sensitive, I can maybe receive that data if I can fill the table on that switch. So it's a vulnerability in there. Okay. So before we get into network security devices, just to recap on protocols and layers, because I think that if you never took computer networks, you need to have at least a basic understanding of those and how they could be attacked. These protocols and layers, they can be attacked. But we need them, right? We need them. It's just like how somebody can run through a red light. But we still need that red light, right? So we still need that. Um, some of these ensure, uh, delivery. Some of these ensure they get from one end to another. Uh, some make sure there's not a collision with IP addresses. Um, and all these devices are constantly evolving. The software on them is evolving, uh, to adapt to these different attacks. So there are some network devices, uh, that we won't actually have in this course. We'll take a look at some software versions of them that can help protect their network as well. The one that most people are familiar with is something called a firewall. Right. How many people have heard of a firearm? Right. Okay. Good enough. Fairly basic device. Okay. Um, but you need to know what a port is. You need to know what a key address is and understand how a firewall works. Firewall rules with basic firewall rules are very simple. You say only allow a particular IP or Support from the outside. Inside this particular note. Okay. So very basic right. Very basic firewall. All your home routers have a firewall built into it. Right. Um, it helps protect your network. Right. So there are both network based and host based firewalls. If you're running a large organization, you're going to have undoubtedly an actual physical, uh, firewall. It's not going to be a host based firewall. We'll take a look at how we can use a host based firewall in this class. So very basic one packet filter firewall. Um, if I have anybody that's trying to log into CAS lab from outside case, they get blocked. I don't want anybody kind of wanting to cancel my house. In case you have no business turning on while you're outside of the case. Right. So if they try to access it via port 22 from outside of the network, they are blocked. If they're inside the network, we let it open. Right. Um, because there's some level of trust there. But if we think about it, if we have a web server, we want to do business out there on the internet. We need to have the door right for people to walk into. It's just like a store, like, you know, out, out on the street. You need to have a front door if you want to sell something. Right. So it's the same idea with, uh, with our with a network. We need to have a front door open, so we might leave something like four, four, three open, right. For people to access. So it's a packet filter. Firewall. Very basic. You can block things. You can, uh, or you can block certain ports. Or a better approach is saying, here's are the only things I'm going to allow into my network. So that's just based off of IP and port. There's more sophisticated firewalls though. One of them is called a stateful or packet inspection firewall. A stateful firewall is actually going to take a look at, uh, the current state of that connection. So meaning, do they actually have an open TCP connection? If they don't, then they should be able to send a thin packet or a snack or anything like that if they never establish a connection. Right. So stateful packet inspection is going to take a look inside that packet and kind of keep track of traffic that's coming in. A deep packet inspection is going to be a little bit more involved. So it's actually going to take a look at the data in the packet. There are some privacy issues with this because if that packet is being inspected who else can see that data. But if you also have some encrypted traffic it does make it a little bit more tricky as well. So you start off with a very basic based on the IP, based on the port, to take a look at some of the state information within that connection to actually take a look at the data. All right. As you can imagine, the more as you get more towards a deep packet inspection, the cost goes up, the compute power goes up. Right. So using firewalls, though, one of the things that we could do is we can create network zones, right. Um, with uh, you probably heard of this term called the DMZ within networks, but that's what we call a demilitarized zone. So the idea behind this is that if I want to do any kind of communication with the internet, I need to have a door open, right. If I want to do business, I have to have a door open. And so let's just assume that is port 443 for our web server. So externally somebody if customer needs to get in. Right. But we want to limit that port. So if they can come in on port 443 well then they can communicate with that web server. But we shouldn't allow them to go all the way to our internal network. Right. So we only allow them to talk to the web server. The web server might talk to these internal servers, which could be a database server. It could be an app server, but we only allow that web server to communicate to these. So we can set up our firewall firewall rules to only allow traffic from here and to here. Okay. But this piece here is essentially what we call our DMZ. Now the concept of a DMZ before was don't even have a firewall here. Just put your web server out in front where it has a direct connection to the internet. As you can imagine, that's risky, right? Because if I need to log in to maintain that web server, having it totally exposed is ludicrous. So you need to at least have, um, you need to at least have some sort of firewall in front of it to protect it a little bit. The other thing, um, when you think about a network zone, is that it has some level of redundancy. So to have load balancers that can distribute the load. Because what if I have, um, what if I have this web server go down for maintenance or that web server can't handle the load? So you can have a load balancer that sits in front and essentially distributes that traffic across multiple servers. All right. So this is like a simple example right. Simple example of having a network zone. So you can say all right well look we got the internet. We have a firewall. We're going to have port 443 open. Maybe it talks to port 80 on the app server. Um some other port on the database server depending on what database it's running. And the employees exist inside this internal network. So this is a very simple example of creating a network zone. You can use firewalls to do this. Very easy. And we have this at case. We can uh actually isolate this a little bit more because one of the largest threats in your organization, believe it or not, is your actual employee, right. They could do some of the most damage, either intentionally or unintentionally. Potentially they download some virus or something like that and they could do some damage to the network. So we should move that. We can keep them on their own network. I can make an argument that maybe somebody in maintenance should not have direct access to a database server, right? Only maybe certain employees should be able to have access to that. Right. So we can isolate them into their own network. Right. We can use a firewall to do that as well. We can even go further. I could say, well, look, I want to make sure that my database server doesn't get compromised, right? By maybe something malicious running on the web server or application server. And so I can put that into its own zone as well. And even further, you might think this is getting a little crazy, but ideally you even have certain roles isolated in their own network zone. Okay. So you can go further and further with this. Uh, and I can even make an argument that if we have a dev test or QA environment, that anything that's running in there should also be in its own network zone and its own data zone for its database server. Because the last thing I would want is a dev server accidentally connecting to a production server, because if we start modifying the person's data, right, that's not going to be good. So now, you know you don't want to have a network zone individually for each employee. I think that's getting a little crazy. But by dividing it up like this, you can help make sure that those particular zones are protected. So another piece that you can use too though is something called a proxy server. Um, there's two ways of using a proxy server. There's a reverse proxy, and there's just a regular proxy, but a proxy server. The idea behind it, uh, is that you don't actually access the web server directly. You work, you access to a web server through something called a proxy. Okay. So that's another way of, of being able to access a web service. Uh, a reverse proxy. Um, works similarly, so. I'm sorry. Why I defined before was a reverse proxy. You go to access a web page. The reverse proxy intercepts the request, and then you interact with that proxy. Another way of using a proxy is internally in-house. So you have all your employees access the internet proxy. And you can use that to maybe filter on some sites that maybe they shouldn't go to willingly or unwillingly. Um, and so that's another way that you can use a proxy. Another network device, um, that you might have heard before is something called an IDs, an intrusion detection system. So one of the things that you want to make sure that on your network, when you think about security is you want to know when something bad has happened or something bad is about to happen. So an IDs can be used to detect that somebody took control of a device on your network. And what it does is it takes a look at signatures from different malware that that is out there, just like an antivirus. There's a variation of this called an IPS, which actually prevents intrusions. And their software you can download for this called snort and snort I believe is still freely available. Yeah, I think so. Snort. It's got kind of a funny logo. I don't know why it's like a pig like that. But anyways, you can actually download this if you want. You could download it on your VM. I don't suggest downloading on your VM because it will slow things down a little bit. Yes, open source intrusion prevention system. Um, I think they might have like maybe like a support license or something like that. Um, but you could download, snort, uh, run that on your network to see if there's any kind of intrusion, um, intrusion on there, another way of protecting a network. And this seems maybe counterintuitive is to use something called a honeypot. Uh, so, uh, if you wanted to attract attackers to a particular point in your network to make it look like this is a place they should attack. It seems like, uh, it's kind of more like a countermeasure. You, uh, have a honeypot available, uh, that attracts them. Uh, with some valuable data. Uh, and it might be a way of distracting them from maybe attacking something that they really should. Um, so this is just like one example of a countermeasure. You got to be careful with countermeasures because, um, if you start to attack, uh, an attacker, you might be attacking a network that they took over. Um, and so you kind of there's a, there's a, you know, fine line with that. So you want to be careful with that. But a honeypot is another thing that you can use as well. Different ways of accessing a network. Um with wireless uh, you should use Wpa2 or Wpa3. You don't want to use WEP anymore if you have a network configured with WP. You can easily crack it. There's a bunch of tools out there. I referenced some of them here. Um, we're not going to play with those tools. Um, because I don't want you attacking the network. Um, but anyways, uh, with wireless, you do want to make sure you have it locked down within your WP to, uh, do the wpa3, uh, VPN. You've probably heard of those before. Virtual private networks. That's a way of having a secure connection into a network. So if I want to get in a lab and I'm at home, I want to ssh into it. I need to connect to a VPN first. Okay. So our VPN solution here uses, uh, two factor authentication. Um, we want you guys know this is, you know, you have to use dual security to be able to log into that. Uh, so that's another way of being able to secure network by, uh, force them to, um, access via VPN, um, with any kind of network switches, uh, we should authenticate any client connected to network. So what we shouldn't allow. And I think we might actually allow this in cases for me to connect a random device to the actual physical network here. You shouldn't allow that. You should have some sort of level of authentication so that people can just can't plug anything randomly in there. And then when we log into a server, you want to use a secure protocol. Okay. So one of the old ways connecting to a host was using something called telnet. Telnet transmits all your credentials over to clear. So somebody can easily see what the password is. So we use things like SSH or SftP and SCP. So at the beginning what we did is we installed SSH on the server. So let's go ahead and give that a whirl. Um if you go to your VM. And oh come on. This may seem counterintuitive because you're ssh ING into the server yourself. Uh, but if you go ahead and do an SSH And then your username. And then at your host I'm going to set that local. The first warning I'm going to get and this should look familiar is I get a 256 fingerprint. Right. We talked about shot 256 for generating a fingerprint. And so what it's saying is we don't know who CommSec local is because we never connected to them before. And here is their fingerprint for identifying themselves. Do you want to keep going. Do you want to continue? Now I'm on this host. I know who it is I'm going to type in. Yes. And then it's going to ask for a password. This is the same password that I use to log into the server. Oh. And then now I'm on the actual server. But I was already on there, so it's not really that interesting. Okay. But if you go from your host machine. As long as you gave it a local. You should be able to log into it. CommSec dot local. I get the same response now here. It's actually a little different. Oh, this is actually a good thing. You're not. I love this. It is possible that someone is doing something nasty, right? I like that. Um, now, the reason why I did this is because I had a CommSec local for fall semester, and it's saying this isn't the same CommSec local. This is good. It shows me ssh is working the same. So you might be trying to connect to somebody else. Now it's telling me. Here's the offending key. It's online 119. Now when you. don't. Don't do this. Um, but every time that you log into a system via SSH, it keeps that fingerprint local on your known host. Okay. Um, so here you can see a bunch of different places I connected to. There's Bitbucket, um, a bunch of different IP addresses. These are some old servers. I really need to clean this out. Um, but anyways, these are all the different fingerprints for all the different places I connected to. Um, so if I go to one line, 119, like it says, there's that CommSec local. Okay. There's caslib. So what I need to do is I need to delete that line. Now, what do you know about that signature? Look at that. We know that it's base64 encoded right. So I'm going to delete that line. And now I'm going to try to reconnect. Oh I guess I got another one in there. In fact, I'm going to take a look at that local. Do I have any more? Oh, I got another one. I got tons of them in there. Okay. There we go. All right. So it says, hey, we don't know who this is. Here's a fingerprint. Do you trust them? Now, ideally, before you station to a server, somebody should give you the fingerprint to say this is the fingerprint for it. I'm going to type in. Yes. And then it permanently adds it to it. And now I'm going to type in my password. And wouldn't you know I'm connected from my host machine via SSH to the VM. Okay. And I can execute commands on here just like I would on my VM. And so what I'm going to do. You can have a lot of fun. Well we shouldn't talk like that. But you could do some fun things on there. Um, but let me just kind of show because this would be the last thing that we do for today. But if I want to take down this machine, I could do that. Shut down H0 to halt. And as soon as I enter this, you'll see it start to shut down the left hand side. And there it goes. Right. And of course, my connection gets terminated. Right? Because I just shut it down. So. Okay. All right. So I wanted to get to, um, doing some men in the middle with Wireshark, but we don't have enough time for that. And I don't want to. I don't want to rush through it. I know we hit on a lot of different topics with network security. There's a lot to actually cover with that. Like I said, if you're more interested in networks, you can go, um, you can take the computer networks class, and I'm sure they talk about some security topics in there. But it is Thursday, so it is time for a quiz. Once you complete the quiz, you can head out. Um, I'm going to make it available here. Oh hold on. And don't forget, as you work on your cryptography assignment to make use of office hours, if you have questions, you can stop by or stop by the Tas. We got all the Tas. Office hours are on canvas, and they can certainly help you out with it. If you haven't started it yet, please start it soon. Um, otherwise I don't. You might get into, uh, a bind if you're waiting till the last day. Uh, let me open it up. Hello? All right. Quiz is open. If you go to the bottom, you refresh. The passcode is port scan. Gan, you have ten minutes to complete it. All right, five minutes. It will auto submit. So it's all the way at the bottom on network security. And I'll post the slides for today. And we'll take a look at Wireshark when we get back together next Tuesday. So once you take it you can exit out. Now I hope you all have a good weekend. If you don't see it, just refresh. Port scan. Oh, yeah. Hold on. I'll put it up here. But all one word. I think that was one of. You could do. What you completed. You can head out. I'll see you all next week. Hey, did it work? Do you have to close your. Eyes? No. It's just as it's always supposed to be. After I just posted that, I couldn't take my supplementary notes. Right here. I don't. Want to carry all. This. Trouble? That's fine. Oh, okay. Uh, what do you mean? I think. We should go. You have a. Good. Day. I absolutely cannot this year. I really like it. Do you like it? Yeah. Try it again. It should work. Oh, it will save your answer, so I don't. Have. Any regrets? Right? Yes. Yes. It's up. For some time now. Oh, yeah. I know. But you have everything, right? So there's definitely a problem. Um. I just did a report on it. Did you take this off or. So. That's right. Oh, yeah. That's, uh. Um. Like, uh. Uh. And, uh. Uh. Whatever. Gotcha. Okay. I just wanted to see if there's anything like. That. That's. Why? It wasn't like that. Or maybe like a. Secret? I. Know. There. Is. Some kind of. Secret. What is that? Do you know what that is all about? Um. Oh, no. What I did see, there was some, like, a date or something. I'm not sure what showed up. So what did you expect to see? Sorry. Um, I don't remember. That. What did you try to do that you tried? You tried VirtualBox? No, I understand. I mean, this has been working up until now. It didn't work, right? Yeah. Um. I'm trying to think you might. You might run into issues in the class, though. I'm waiting for him. So here's what I want you to look at. first. See if you can install the online tools that might need researching, because I use some parallels a little bit different than that. I wonder what you mean. I'm not sure why it's not showing up here. Maybe take a look at that first. Um, and pretty much what I would do a search like VMware Workstation Consulting, which looks great. Uh, we might have to follow. Uh, I wonder what you saw that you might have to do that, but if you don't, you can come up with things like just stop by, and you can also take a look at it together. Um, or if you're trying to solve, for example, let's see if that might be okay. Um, but sometimes I think it's like they should have a session in here. So yeah, that's never happened before. And think of anything I've done since Tuesday that would change that. Now Not a thing. Wait. Hold on. Okay. Oh, no. Wait for. Me. Someone put that inside. Yes. It's like some kind of blackmail information network. You will see the most from that person. So I wonder if you saw him with Cosette. I'll fix it. So if maybe you could find. Take a look at that first, and then let me know if you still run into an issue. Okay. What about.
